// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: simple_search_skill.sql

package db

import (
	"context"
	"database/sql"
)

const simpleSearchSkill = `-- name: SimpleSearchSkill :many
SELECT skill_description, user_id, created_at
FROM skills
WHERE skill_description 
ILIKE '%' || $1 || '%'
`

type SimpleSearchSkillRow struct {
	SkillDescription string        `json:"skill_description"`
	UserID           sql.NullInt32 `json:"user_id"`
	CreatedAt        sql.NullTime  `json:"created_at"`
}

func (q *Queries) SimpleSearchSkill(ctx context.Context, dollar_1 sql.NullString) ([]SimpleSearchSkillRow, error) {
	rows, err := q.db.QueryContext(ctx, simpleSearchSkill, dollar_1)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SimpleSearchSkillRow
	for rows.Next() {
		var i SimpleSearchSkillRow
		if err := rows.Scan(&i.SkillDescription, &i.UserID, &i.CreatedAt); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
